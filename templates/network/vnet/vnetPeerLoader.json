{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vnetObject": {
            "type": "object"
        },
        "env": {
            "type": "string"
        }
    },
    "variables": {
        "collectorTemplateUri": "[uri(deployment().properties.templateLink.uri, 'vnetCollector.json')]"
    },
    "resources": [
        {
            "apiVersion": "2015-01-01",
            "name": "collector",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('collectorTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "source": {
                        "value": "[parameters('vnetObject').settings]"
                    },
                    "transformTemplateUri": {
                        "value": "[uri(deployment().properties.templateLink.uri, 'vnetTransform.json')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2018-01-01",
            "type": "Microsoft.Network/virtualNetworks",
            "location": "[resourceGroup().location]",
            "name": "[concat('VN-', parameters('env'), '-', parameters('vnetObject').settings[copyIndex()].name)]",
            "copy": {
                "name": "virtualNetworks",
                "count": "[length(parameters('vnetObject').settings)]",
                "mode": "Parallel"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "parameters('vnetObject').settings[copyIndex()].addressPrefixes"
                    ]
                },
                "subnets": "parameters('vnetObject').settings[copyIndex()].subnets"
            }
        }
    ],
    "outputs": {
        "instance": {
            "type": "array",
            "value": "[reference('firstResource').outputs.result.value]"
        }
    }
}